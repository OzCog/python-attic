
                      Clustering
                      ----------
                       May 2014

This directory is going to contain some relatively simple, quick-n-dirty
clustering algorithms for extracting the number of clusters, and their
sizes, given only a collection of objects, and the pair-wise distances
between them.  Currently, the primary consumer of this code is planned
to be MOSES; the clustering is neede to get a sensation of the diversity
of the demes being trained in MOSES.  That is, given a collection of
combo trees, and some distance measure between them, the goal is to see
how many of these are similar, and how many are different, and what the
variation within a cluster might be.

Note: the above mis-uses the word "distance". The actual pair-wise
numbers might not actually be distances in the strict sense; that is,
they might not obey the triangle inequality.

References:
-----------
http://en.wikipedia.org/wiki/Spectral_clustering
http://en.wikipedia.org/wiki/K-means_clustering
http://en.wikipedia.org/wiki/Expectation-maximization_algorithm
http://en.wikipedia.org/wiki/DBSCAN
http://en.wikipedia.org/wiki/OPTICS_algorithm

Algorithm selection:
--------------------
Most algorithms seem to assume spatial data: i.e. true distance measures
(metrics, e.g. Euclidean space).  We do not have that. This includes the 
DBSCAN, OPTICS and BIRCH algorithms, as well as k-means.

 * The DBSCAN and OPTICS algorithms seem to work well only for low-
   dimensional data. (??) We don't have that.

 * BIRCH is disigned for huge datasets. We don't have that much data.

 * EM (expectation maximization) might work; I sort-of a-priori expect
   the clusters to be Gaussian, but I don't really know that yet...

 * k-means tends to produce clusters of similar size. its not clear that
   this will be the case here. Anyway, we don't have a space w/ metric...

By elimination, this leaves some version of spectral clustering as the
only choice.


Spectral Clustering
-------------------
Choices:
http://en.wikipedia.org/wiki/Spectral_clustering
http://en.wikipedia.org/wiki/Lanczos_algorithm
http://en.wikipedia.org/wiki/LOBPCG

Source code: C/C++:
https://github.com/fedelebron/Spectral-Clustering
  Sounds crazy/broken/amateur

https://code.google.com/p/pspectralclustering/
  Parallel, for supercomp[uters. Overkill.

http://matthias.jimdo.com/downloads/spectral-clustering/
  WTF? doesn't seem to actually implement spectral clustering???
  I can't find the code its all OpenGL and misc junk ...

OK, so have to hand-build.

Seems that the LOBPCG algo would be the best. To avoid developing from
scratch ... can we get it somewhere?

-- gsl does not have it
-- scipy does but we're not using python
-- octave has it, but octave is fat.
-- https://code.google.com/p/blopex/
   blopex looks reasonably stand-alone.  Seems to need lapack

blopex seems like the only way to go ... 




