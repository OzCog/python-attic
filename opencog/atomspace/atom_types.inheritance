/* File automatically generated. Do not edit */
opencog::ATOM = opencog::ClassServer::addType(opencog::ATOM, "Atom");
opencog::NODE = opencog::ClassServer::addType(opencog::ATOM, "Node");
opencog::LINK = opencog::ClassServer::addType(opencog::ATOM, "Link");
opencog::CONCEPT_NODE = opencog::ClassServer::addType(opencog::NODE, "ConceptNode");
opencog::NUMBER_NODE = opencog::ClassServer::addType(opencog::NODE, "NumberNode");
opencog::ORDERED_LINK = opencog::ClassServer::addType(opencog::LINK, "OrderedLink");
opencog::UNORDERED_LINK = opencog::ClassServer::addType(opencog::LINK, "UnorderedLink");
opencog::SET_LINK = opencog::ClassServer::addType(opencog::UNORDERED_LINK, "SetLink");
opencog::SUBSET_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "SubsetLink");
opencog::LIST_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "ListLink");
opencog::MEMBER_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "MemberLink");
opencog::AND_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "AndLink");
opencog::OR_LINK = opencog::ClassServer::addType(opencog::UNORDERED_LINK, "OrLink");
opencog::NOT_LINK = opencog::ClassServer::addType(opencog::UNORDERED_LINK, "NotLink");
opencog::FALSE_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "FalseLink");
opencog::TRUE_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "TrueLink");
opencog::VARIABLE_NODE = opencog::ClassServer::addType(opencog::NODE, "VariableNode");
opencog::VARIABLE_SCOPE_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "VariableScopeLink");
opencog::FW_VARIABLE_NODE = opencog::ClassServer::addType(opencog::NODE , "FWVariableNode");
opencog::FORALL_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "ForallLink");
opencog::EXIST_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "ExistLink");
opencog::SCHOLEM_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "ScholemLink");
opencog::ASSOCIATIVE_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "AssociativeLink");
opencog::INHERITANCE_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "InheritanceLink");
opencog::SIMILARITY_LINK = opencog::ClassServer::addType(opencog::UNORDERED_LINK, "SimilarityLink");
opencog::EXTENSIONAL_INHERITANCE_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "ExtensionalInheritanceLink");
opencog::EXTENSIONAL_SIMILARITY_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "ExtensionalSimilarityLink");
opencog::INTENSIONAL_INHERITANCE_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "IntensionalInheritanceLink");
opencog::INTENSIONAL_SIMILARITY_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "IntensionalSimilarityLink");
opencog::IMPLICATION_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "ImplicationLink");
opencog::EXTENSIONAL_IMPLICATION_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "ExtensionalImplicationLink");
opencog::EXTENSIONAL_EQUIVALENCE_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "ExtensionalEquivalenceLink");
opencog::EQUIVALENCE_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "EquivalenceLink");
opencog::INTENSIONAL_IMPLICATION_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "IntensionalImplicationLink");
opencog::INTENSIONAL_EQUIVALENCE_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "IntensionalEquivalenceLink");
opencog::PROCEDURE_NODE = opencog::ClassServer::addType(opencog::NODE, "ProcedureNode");
opencog::GROUNDED_PROCEDURE_NODE = opencog::ClassServer::addType(opencog::PROCEDURE_NODE, "GroundedProcedureNode");
opencog::GROUNDED_PREDICATE_NODE = opencog::ClassServer::addType(opencog::PREDICATE_NODE, "GroundedPredicateNode");
opencog::GROUNDED_PREDICATE_NODE = opencog::ClassServer::addType(opencog::GROUNDED_PROCEDURE_NODE, "GroundedPredicateNode");
opencog::GROUNDED_SCHEMA_NODE = opencog::ClassServer::addType(opencog::SCHEMA_NODE, "GroundedSchemaNode");
opencog::GROUNDED_SCHEMA_NODE = opencog::ClassServer::addType(opencog::GROUNDED_PROCEDURE_NODE, "GroundedSchemaNode");
opencog::SCHEMA_NODE = opencog::ClassServer::addType(opencog::PROCEDURE_NODE, "SchemaNode");
opencog::PREDICATE_NODE = opencog::ClassServer::addType(opencog::SCHEMA_NODE, "PredicateNode");
opencog::SATISFYING_SET_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "SatisfyingSetLink");
opencog::SCHEMA_EXECUTION_LINK = opencog::ClassServer::addType(opencog::INHERITANCE_LINK, "SchemaExecutionLink");
opencog::SCHEMA_EVALUATION_LINK = opencog::ClassServer::addType(opencog::SCHEMA_EXECUTION_LINK, "SchemaEvaluationLink");
opencog::EVALUATION_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "EvaluationLink");
opencog::EXECUTION_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "ExecutionLink");
opencog::EXECUTION_OUTPUT_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "ExecutionOutputLink");
opencog::PREDICTIVE_IMPLICATION = opencog::ClassServer::addType(opencog::ORDERED_LINK, "PredictiveImplication");
opencog::TAIL_PREDICTIVE_IMPLICATION = opencog::ClassServer::addType(opencog::ORDERED_LINK, "TailPredictiveImplication");
opencog::SEQUENTIAL_AND_LINK = opencog::ClassServer::addType(opencog::AND_LINK, "SequentialAndLink");
opencog::SIMULTANEOUS_AND_LINK = opencog::ClassServer::addType(opencog::AND_LINK, "SimultaneousAndLink");
opencog::EVENTUAL_SEQUENTIAL_AND_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK , "EventualSequentialAND");
opencog::EVENTUAL_PREDICTIVE_IMPLICATION_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK , "EventualSequentialImplication");
opencog::HYPOTHETICAL_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "HypotheticalLink");
opencog::MIXED_IMPLICATION_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "MixedImplicationLink");
opencog::FEELING_NODE = opencog::ClassServer::addType(opencog::GROUNDED_PREDICATE_NODE, "FeelingNode");
opencog::GOAL_NODE = opencog::ClassServer::addType(opencog::GROUNDED_PREDICATE_NODE, "GoalNode");
opencog::LEARNED_SCHEMA_GOAL_NODE = opencog::ClassServer::addType(opencog::GOAL_NODE, "LearnedSchemaGoalNode");
opencog::SCHEMA_GOAL_IMPLICATION_LINK = opencog::ClassServer::addType(opencog::IMPLICATION_LINK, "SchemaGoalImplicationLink");
opencog::AT_TIME_LINK = opencog::ClassServer::addType(opencog::ORDERED_LINK, "AtTimeLink");
opencog::TIME_NODE = opencog::ClassServer::addType(opencog::NODE, "TimeNode");
opencog::WORD_NODE = opencog::ClassServer::addType(opencog::NODE, "WordNode");
