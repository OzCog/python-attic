/** MOSESUTest.cxxtest --- 
 *
 * Copyright (C) 2011 OpenCog Foundation
 *
 * Author: Nil Geisweiller <nilg@desktop>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License v3 as
 * published by the Free Software Foundation and including the exceptions
 * at http://opencog.org/wiki/Licenses
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, write to:
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#include <cxxtest/TestSuite.h>
#include <boost/assign/list_of.hpp>
#include <opencog/learning/moses/main/moses_exec.h>

using boost::assign::list_of;
using namespace moses;

/**
 * MOSES test on toy problems
 */
class MOSESUTest : public CxxTest::TestSuite {
    void moses_test(vector<string> arguments) {
        // build arguments
        char tempfile[] = "/tmp/MOSESUTestXXXXXX";
        mkstemp(tempfile);
        arguments.insert(arguments.begin(), "moses-exec");
        arguments.push_back(string("-o").append(tempfile).c_str());
        // run moses
        moses_exec(arguments);
        // parse the result
        FILE* fp = fopen(tempfile, "r");
        __gnu_cxx::stdio_filebuf<char> pipe_buf(fp, ios_base::in);
        istream sp(&pipe_buf);
        string s;
        sp >> s;
        std::cout << "s = " << s << std::endl;
        pclose(fp);
        // check that the result is 0
        TS_ASSERT(lexical_cast<int>(s) == 0);
    }
public:
    void test_hc_2_parity() {
        moses_test(list_of("-Hpa")("-k2"));
    }
    void test_hc_3_mux() {
        moses_test(list_of("-Hmux")("-k3"));
    }
    void test_sa_2_parity() {
        moses_test(list_of("-Hpa")("-k2")("-asa"));
    }
    void test_sa_3_mux() {
        moses_test(list_of("-Hmux")("-k3")("-asa"));
    }
};
