/**
 * nearestComboInterpreterUTest.cxxtest
 *
 * Author: Elvys Borges 
 * Copyright(c), 2007
 */

#include "ComboInterpreterUTest.h"
#include "util/mt19937ar.h"
#include "PetComboVocabulary.h"

using namespace PerceptionActionInterface;
using namespace PetCombo;
using namespace std;

class nearestComboInterpreterUTest :  public CxxTest::TestSuite , ComboInterpreterUTest {

  private:
  opencog::RandGen* rng;
 
  public :
 
  nearestComboInterpreterUTest() {
     rng = new opencog::MT19937RandGen(0);
  }
 
  ~nearestComboInterpreterUTest() {
     delete rng;
  }

  opencog::RandGen& getRandGen() {
     return *rng;
  }

  void testNearestObject() {
    std::string str("nearest_object");
    runProcedureInCombo(str, PAIUtils::getInternalId("Stick"));
  }

  void testNearestEdible() {
    std::string str("nearest_edible");
    runProcedureInCombo(str, PAIUtils::getInternalId("meat"));
  }

  void testNearestMovable() {
    std::string str("nearest_movable");
    runProcedureInCombo(str, PAIUtils::getInternalId("Stick"));
  }

  void testNearestPickupable() {
    std::string str("nearest_pickupable");
    runProcedureInCombo(str, PAIUtils::getInternalId("Stick"));
  }

  void testNearestDrinkable() {
    std::string str("nearest_drinkable");
    runProcedureInCombo(str, PAIUtils::getInternalId("milk"));
  }

  void testNearestAvatar() {
    std::string str("nearest_avatar");
    runProcedureInCombo(str, PAIUtils::getInternalId("Wynx"));
  }

  void testNearestPet() {
    std::string str("nearest_pet");
    runProcedureInCombo(str, PAIUtils::getInternalId("Macku"));
  }

  void testNearestSmall() {
    std::string str("nearest_small");
    runProcedureInCombo(str, PAIUtils::getInternalId("Stick"));
  }

  void testNearestMoving() {
    std::string str("nearest_moving");
    runProcedureInCombo(str, PAIUtils::getInternalId("Stick"));
  }
	
  void testNearestPooPlace() {
    std::string str("nearest_poo_place");
    runProcedureInCombo(str, PAIUtils::getInternalId("wall"));
  }

  void testNearestPeePlace() {
    std::string str("nearest_pee_place");
    runProcedureInCombo(str, PAIUtils::getInternalId("wall"));
  }

  void testNearestNoise() {
    std::string str("nearest_noisy");
    runProcedureInCombo(str, PAIUtils::getInternalId("Macku"));
  }

};


