/**
 * BuiltInProcedureRepositoryUTest.cxxtest
 *
 * Author: Welter Luigi
 * Copyright(c), 2007
 */
#include <opencog/embodiment/Control/Procedure/BuiltInProcedureRepository.h>
#include <tests/embodiment/Control/PerceptionActionInterface/ActionPlanSenderMock.h>
#include <tests/embodiment/Control/PerceptionActionInterface/PetInterfaceMock.h>
#include <opencog/embodiment/Control/EmbodimentConfig.h>

using namespace Procedure;
using namespace PerceptionActionInterface;
using namespace Control;
using namespace opencog;

class BuiltInProcedureRepositoryUTest :  public CxxTest::TestSuite
{

public:
    BuiltInProcedureRepositoryUTest() {
        config(EmbodimentConfig::embodimentCreateInstance, true);
    }

    ~BuiltInProcedureRepositoryUTest() {
    }

    void setUp() {
    }

    void tearDown() {
    }


    void testContains() {
        AtomSpace as;

        FailureActionPlanSender ap;
        PetInterfaceMock pi;
        PAI pai(as, ap, pi);
        pi.setPAI(&pai);
        BuiltInProcedureRepository rep(pai);
        TS_ASSERT(rep.contains(string("BARK")));
        TS_ASSERT(!rep.contains("non-existing-builtin-schema"));
    }

    void testGet() {
        AtomSpace as;

        FailureActionPlanSender ap;
        PetInterfaceMock pi;
        PAI pai(as, ap, pi);
        pi.setPAI(&pai);
        BuiltInProcedureRepository rep(pai);
        const BuiltInProcedure& proc = rep.get(string("BARK"));
        TS_ASSERT(proc.getName() == "BARK");
    }

};
