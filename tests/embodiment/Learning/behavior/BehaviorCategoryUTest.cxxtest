/**
 * BehaviorCategoryUTest
 *
 * $Header$
 *
 * Author: Andre Senna
 * Creation: Wed Aug 22 12:57:33 BRT 2007
 */

#include <opencog/embodiment/Learning/behavior/BehaviorCategory.h>
#include <opencog/atomspace/AtomSpace.h>

using namespace behavior;

class BehaviorCategoryUTest : public CxxTest::TestSuite
{

private:

public:

    BehaviorCategoryUTest() {

    }

    void setUp() {
    }

    void tearDown() {
    }

    void test_addCompositeBehaviorDescription() {

        AtomSpace atomSpace;

        CompositeBehaviorDescription bd1;
        CompositeBehaviorDescription bd2;

        {
            Handle h1 = atomSpace.addNode(PREDICATE_NODE, "P1");
            Temporal t1(0, 1);
            bd1.addPredicate(h1, t1);
            Handle h2 = atomSpace.addNode(PREDICATE_NODE, "P2");
            Temporal t2(1, 3);
            bd1.addPredicate(h2, t2);
        }

        {
            Handle h1 = atomSpace.addNode(PREDICATE_NODE, "P12");
            Temporal t1(0, 12);
            bd2.addPredicate(h1, t1);
            Handle h2 = atomSpace.addNode(PREDICATE_NODE, "P22");
            Temporal t2(1, 32);
            bd2.addPredicate(h2, t2);
        }

        BehaviorCategory category;
        category.addCompositeBehaviorDescription(bd1);
        category.addCompositeBehaviorDescription(bd2);

        //printf("\n%s\n", category.toStringHandles().c_str());
        TS_ASSERT(category.toStringHandles() == "{(P1,(UNIFORM,0,1)),(P2,(UNIFORM,1,3))}\n{(P12,(UNIFORM,0,12)),(P22,(UNIFORM,1,32))}");
    }


}; // class
