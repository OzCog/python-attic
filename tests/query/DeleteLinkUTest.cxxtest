/*
 * tests/query/DeleteLinkUTest.cxxtest
 *
 * Copyright (C) 2015 Linas Vepstas
 * All Rights Reserved
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License v3 as
 * published by the Free Software Foundation and including the exceptions
 * at http://opencog.org/wiki/Licenses
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, write to:
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#include <opencog/guile/load-file.h>
#include <opencog/guile/SchemeEval.h>
#include <opencog/guile/SchemeSmob.h>
#include <opencog/atomspace/AtomSpace.h>
#include <opencog/query/BindLink.h>
#include <opencog/util/Config.h>
#include <opencog/util/Logger.h>

using namespace opencog;

class DeleteLinkUTest: public CxxTest::TestSuite
{
private:
	AtomSpace *as;
	SchemeEval* eval;

public:
	DeleteLinkUTest(void)
	{
		try
		{
			 config().load("opencog-test.conf");
		}
		catch (RuntimeException &e)
		{
			std::cerr << e.getMessage() << std::endl;
		}
		logger().setFilename(config()["LOG_FILE"]);
		logger().setLevel(Logger::getLevelFromString(config()["LOG_LEVEL"]));
		logger().setPrintToStdoutFlag(config().get_bool("LOG_TO_STDOUT"));

		as = new AtomSpace();
		eval = new SchemeEval(as);
	}

	~DeleteLinkUTest()
	{
		delete eval;
		delete as;
		// Erase the log file if no assertions failed.
		if (!CxxTest::TestTracker::tracker().suiteFailed())
				std::remove(logger().getFilename().c_str());
	}

	void setUp(void);
	void tearDown(void);

	void test_basic(void);
};

void DeleteLinkUTest::tearDown(void)
{
	as->clear();
}

void DeleteLinkUTest::setUp(void)
{
	as->clear();
	config().set("SCM_PRELOAD",
		"opencog/atomspace/core_types.scm, "
		"opencog/scm/utilities.scm, "
		"opencog/scm/opencog/query.scm");

	load_scm_files_from_config(*as);
}

/*
 * DeleteLink most basic unit test.
 */
void DeleteLinkUTest::test_basic(void)
{
	logger().debug("BEGIN TEST: %s", __FUNCTION__);

	config().set("SCM_PRELOAD", "tests/query/delete-link.scm");
	load_scm_files_from_config(*as);

	Handle green = eval->eval_h("(cog-bind (take-one-step))");
	printf ("green: found:\n%s\n", green->toShortString().c_str());
	TS_ASSERT_EQUALS(1, as->getArity(five));

	logger().debug("END TEST: %s", __FUNCTION__);
}

