/*
 * tests/query/VarTypeNotUTest.cxxtest
 *
 * Copyright (C) 2009 Linas Vepstas <linasvepstas@gmail.com>
 * All Rights Reserved
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License v3 as
 * published by the Free Software Foundation and including the exceptions
 * at http://opencog.org/wiki/Licenses
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, write to:
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#include <opencog/atomspace/Link.h>
#include <opencog/atomspace/Node.h>
#include <opencog/query/DefaultPatternMatchCB.h>
#include <opencog/query/PatternMatch.h>
#include <opencog/server/CogServer.h>
#include <opencog/util/Logger.h>

#include <cstdio>

using namespace opencog;

class VarTypeNotUTest :  public CxxTest::TestSuite
{
	private:
		PatternMatchEngine pme;
		AtomSpace *as;
		Handle svar, wvar;
		Handle p1, p2;
		Handle anch;

	public:

		VarTypeNotUTest(void)
		{
			logger().setLevel(Logger::DEBUG);
			logger().setPrintToStdoutFlag(true);
		}

		~VarTypeNotUTest()
		{
			// erase the log file if no assertions failed
			if (!CxxTest::TestTracker::tracker().suiteFailed())
				std::remove(logger().getFilename().c_str());
		}

		void setUp(void);

		void tearDown(void) { }

		void test_stack(void);
};

/*
 * This function sets up the following structures:
 */
#define an as->addNode
#define al as->addLink
void VarTypeNotUTest::setUp(void)
{
	CogServer& cogserver = static_cast<CogServer&>(server());
	as = cogserver.getAtomSpace();
	pme.set_atomspace(as);

}

/*
 *
 */
void VarTypeNotUTest::test_vartype_rejection(void)
{
	logger().debug("BEGIN TEST: %s", __FUNCTION__);

	logger().debug("END TEST: %s", __FUNCTION__);
}
